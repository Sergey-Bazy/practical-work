/*Практическое задание 3.4
 программе задана переменная value, в которую записано дробное число. Выполните следующие операции:

 округлите значение переменной "вверх" до целого значения;
 округлите значение переменной "вниз" до целого значения;
 округлите значение переменной по правилам математики до целого значения;
 посчитайте сумму полученных выше значений и из результата возьмите корень квадратный;
 из результата возьмите целую часть числа и выведите в консоль.
 
 Примеры значений переменных:
 value = 5.4
 
 Пример результата:
 4 
const value = 5.4;
const ceil = Math.ceil(value);
const floor = Math.floor(value);
const round = Math.round(value);
const sqrt = Math.sqrt(ceil + floor + round);
const trunc = Math.trunc(sqrt);
console.log(Math.round(trunc));*/

// ***************************************************************************************

/* Практическое задание 3.5
В программе заданы две переменные a и b с числовыми значениями. Выведите в консоль произведение значений этих переменных, возведенное в квадрат.


Пример значений переменных:
let a = 2;
let b = 4;

Пример результата:
64 

let sum = a * b;
console.log(Math.pow(sum,2)); */

// *****************************************************************************************

/* Практическое задание 3.6
В программе заданы две переменные a и b с числовыми значениями. Посчитайте длину гипотенузы в прямоугольном треугольнике, если значения a и b являются длинами катетов. Результат выведите в консоль.


Пример значений переменных:
let a = 3;
let b = 4;

Пример результата:
5

console.log(Math.hypot(a, b)); // Метод Math.hypot() возвращает квадратный корень суммы квадратов своих аргументов. */

//********************************************************************************************

/* Практическое задание 3.7

В программе задана переменная obj, в которую записан объект со свойствами name, last_name и age, в которых хранятся имя, фамилия и возраст пользователя соответственно. Сформируйте строку по примеру и выведите ее в консоль. Обратите внимание, что имя и фамилию требуется заключить в различные виды кавычек.


Пример значений переменных:
name: "Анатолий", last_name: "Максимов", age: 32

Пример результата:
Имя: "Анатолий" Фамилия: 'Максимов' Возраст: 32

let str = `Имя: "${obj.name}" Фамилия: '${obj.last_name}' Возраст: ${obj.age}`;
console.log(str); */

// ********************************************************************************************

/* Практическое задание 3.8

В программе заданы три переменные name, last_name, age, в которых хранятся имя, фамилия и возраст пользователя соответственно. Сформируйте объект с ключами name, last_name, age и значениями из соответствующих переменных. Выведите этот объект в консоль.


Пример значений переменных:
name = "Анатолий"
last_name = "Максимов"
age = 32

Пример результата:
{name: "Анатолий", last_name: "Максимов", age: 32}

let obj = {
    name: name,
    last_name: last_name,
    age: age
   }
   
   console.log(obj); */

//    *********************************************************************************************

/* Практическое задание 3.9

В программе задана переменная value. Выведите в консоль ее тип. Не забудьте, что функция typeof со значением аргумента null выдает неправильный результат. При значении null необходимо вывести "null".


Пример значений переменных:
let value = "привет";

Пример результата:
"string"

if (value === null)  { console.log("null") } else { console.log (typeof value) } */

// **************************************************************************************************

/* Практическое задание 3.10

В программе объявлены две переменные num_1 и num_2, в которых записаны численные значение в строковом виде. Преобразуйте строки в числа и посчитайте их сумму. Результат выведите в консоль.


Пример значений переменных:
num_1 = "3"
num_2 = "5"

Пример результата:
8

console.log(+num_1 + +num_2 ) */

// *****************************************************************************************************

/* Практическое задание 3.11

В программе объявлена переменная size, в которой записано строковое значение. В строке size записано число и единицы измерения. Необходимо "достать" численное значение вывести в консоль.

Пример значений переменных:
size = "500.5%"

Пример результата:
500.5

console.log(parseFloat(size)) */

// ******************************************************************************************************

/* Практическое задание 3.12

В программе заданы три переменные a, b и c, в которых хранятся длина, ширина и высота прямоугольного параллелепипеда с указанием единиц измерения. Напишите программу, которая рассчитывает объем прямоугольного параллелепипеда и выводит результат в консоль без единиц измерения.


Пример значений переменных:
a = "5px"

b = "7px"

c = "10px"

Пример результата:
350

//*************************************************************

                                                                 УСЛОВНЫЕ ОПЕРАТОРЫ!!!


Практическое задание 4.1

В программе задана переменная speed с числовым значением. Реализуйте программу, которая в зависимости от условия выполняет следующее действие:

если значение от 0 до 30 включительно, выведите строку Вы едете слишком медленно;
если значение от 31 до 70 включительно, выведите строку Вы едете с нормальной скоростью;
в ином случае выведите Вы едете слишком быстро, сбавьте скорость.

Пример значений переменных:
speed = 60

Пример результата:
"Вы едете с нормальной скоростью"

if(speed <= 30){
    console.log("Вы едете слишком медленно");
    }
    else if(speed >= 31 & speed <= 70){
    console.log("Вы едете с нормальной скоростью");
    }
    
    else {console.log("Вы едете слишком быстро, сбавьте скорость")
    }; */

// *****************************************************************************************

/* Практическое задание 4.2

В программе объявлена переменная price, в которой хранится строка со значением цены. Переведите значение переменной в число (parseInt) и в зависимости от полученного значения выполните следующее действие:

если записанное значение оказалось не числом, выведите в консоль сообщение Не число;
если число равно 0 или является отрицательным, выведите в консоль сообщение Число не корректное;
в ином случае выведите в консоль значение числа.

Пример значений переменных:
price = "12 рублей"

Пример результата:
12

let int = parseInt(price);
if(isNaN(int)){
  console.log("Не число");
}
else if(int <= 0 ){
  console.log("Число не корректное")
}
else{
  console.log(int)
} */
// **********************************************************************************************

/* Практическое задание 4.3
В программе объявлены три переменные a, b и c, в которые записаны числовые значения. Определите максимальное значение и выведите его в консоль, но помните: методом max пользоваться нельзя.


Пример значений переменных:
a = 32

b = 5

c = 14

Пример результата:
32

if (a > b && a > c) {
    console.log(a);
} else if (b > a && b > c) {
    console.log(b);
} else {
    console.log(c);
}
 */
// ******************************************************************************************************

/* Практическое задание 4.4

В программе объявлены две переменные — temp и weather. Объявите переменную activity и присвойте ей значение по следующему правилу:
если значение переменной temp больше либо равно 25, a переменная weather имеет значение "clear", тогда значение переменной activity должно быть "golf";
если значение переменной temp от 10 до 24, a переменная weather имеет значение "clear", тогда значение переменной activity должно быть "bowling";
в ином случае значение переменной activity должно быть "hiking".

Пример значений переменных:
temp = 25

weather = "clear"

Пример результата:
"golf"

let activity ="";

if(temp >= 25 && weather == "clear" ) {
  activity = "golf";
}
else if(temp >= 10 && temp <=24 &&  weather == "clear"){
  activity = "bowling";
}
else{
  activity = "hiking";
} */

// *********************************************************************************************************

/* Практическое задание 4.5

В программе определены две переменные со строковым значением word_1 и word_2. Допишите программу таким образом, чтобы в консоль выводилась строка наибольшей длины.


Пример значений переменных:
word_1 = "машина"

word_2 = "стол"

Пример результата:
"машина"

console.log((word_1.length > word_2.length)?word_1:word_2 ); */

// ***********************************************************************************************************

/* Практическое задание 4.6

В программе объявлена переменная task, в которой записано одно из строковых значений: удалить, переименовать, редактировать. Напишите программу, которая выводит в консоль:

delete – при значении task – удалить;
rename – при значении task – переименовать;
edit – при значении task – редактировать.

Пример значений переменных:
task = "переименовать"

Пример результата:
"rename"

switch(task){
    case "удалить" :
      console.log("delete")
      break;
  case "переименовать" :
      console.log("rename")
      break;
  case "редактировать" :
      console.log("edit")
  } */

//   *****************************************************************************************************************

/* Практическое задание 4.7

В программе объявлены две переменные — price и range. Переменная range может принимать одно из трех строковых значений — month/day/week. Переменная price хранит в себе числовое значение. Необходимо написать программу, которая формирует строку с использованием данных переменных по следующему шаблону:


<значение price> Р в <эквивалент значения range на русском языке>

Пример значений переменных:

price = 10000

range = "day"


Пример результата:

10000 Р в день.

switch(range){
case "month":
    console.log(`${price} Р в месяц`);
    break;
case "day":
    console.log(`${price} Р в день`);
    break;
case "week":
    console.log(`${price} Р в неделю`);
} */

//   *****************************************************************************************************************

/*  Практическое задание 4.8

В программе объявлены три переменные — a, b и sign. В переменных a и b хранятся числовые значения. В переменную sign записано строковое значение одного из математических операторов +, -, /, *. Напишите простой калькулятор, который в зависимости от значения переменной sign будет совершать соответствующие математические операции с переменными a и b. Результат необходимо выводить в консоль. Гарантируется, что переменная b не равна нулю.


Примеры значений переменных:

a = 2

b = 6

sign = "*"

Пример результата:

12 

switch(sign){
    case"+":console.log(a+b);break;
    case"-":console.log(a-b);break;
    case"*":console.log(a*b);break;
    case"/":console.log(a/b);break;
   } */

//    *************************************************************************************************************************

/* Практическое задание 4.9

Необходимо доработать решение из задания 4.7

В дополнение к заданию 4.7 необходимо правильно обработать случай деления на 0. При попытке поделить на 0 программа должна выводить в консоль сообщение: Делить на 0 нельзя!.

Пример значений переменных:

a = 2

b = 0

sign = "/"

Пример результата:

Делить на 0 нельзя!
 */

/* switch(sign){
 case"+":console.log(a+b);break;
 case"-":console.log(a-b);break;
 case"*":console.log(a*b);break;
 case"/":
         if(b==0){
        console.log("Делить на 0 нельзя!");
       } else {
        console.log(a/b);
       }
        break;
    } */

// ******************************************************************************************************************

// ЦЫКЛЫ!!!

/*    Практическое задание 5.1

    В программе объявлены две переменные start и end. Используя цикл, посчитайте сумму чисел из диапазона значений от start до end (включая концы), кратные значению 5. Результат выведите в консоль.

Пример значений переменных:

start = 0 end = 50
Пример результата:

275

let result = 0;

while(start <= end){
    if(start % 5 === 0){
        result = result + start;
    }
    start++;
    console.log(result);
} */
// ***********************************************************************************************************************

/* Практическое задание 5.2

В программе объявлена переменная word со строковым значением. Переверните строку, используя цикл, и выведите результат в консоль.


Пример значений переменных:
word = "мир"

Пример результата:
"рим"

let reverse = "";

for(let index = word.length - 1;index >=0; index--){
reverse += word[index];
}

console.log(reverse); */

// *************************************************************************************************************

/* Практическое задание 5.3

Определите, является ли word палиндромом:

если является, выведите в консоль "Слово является палиндромом!";
если не является, выведите в консоль "Слово не является палиндромом!".
Примечание:

Строка word состоит только из букв разного регистра (большие и маленькие).


Пример значений переменных:
word = "Доход"

Пример результата:
"Слово является палиндромом!"

let word_low = word.toLowerCase();
let result = "";

for (let i = word_low.length - 1; i >=0; i--){
  result += word_low[i];
}

if (result === word_low ){
  console.log("Слово является палиндромом!");
}
  else{
    console.log("Слово не является палиндромом!")
  } */

//   ********************************************************************************************************

// ФУНКЦИИ!!!

/*  Практическое задание 6.1 
   
В программе объявлена переменная price, в которую записано числовое значение. Напишите функцию priceMessage(), которая выводит в консоль сообщение "Данный товар стоит X рублей", где вместо X указано значение переменной price. Вызовите функцию после ее определения.


Пример значений переменных:
price = 80000

Пример результата:
"Данный товар стоит 80000 рублей"

function priceMessage(){
    console.log(`Данный товар стоит ${price} рублей`);
  }
   priceMessage(); */

//    **********************************************************************************************************

/* Практическое задание 6.2

В программе объявлены две переменные с числовым значением — num_1 и num_2. Напишите функцию mult, которая принимает два аргумента и возвращает их произведение. Вызовите функцию mult и передайте ей в качестве аргументов значения переменных num_1 и num_2, а результат выведите в консоль.


Пример значений переменных:
num_1 = 3

num_2 = 6

Пример результата:
18

function mult(a,b){
    let result =a * b;
    return result;
   }
   
   let m = mult(num_1,num_2);
   console.log(m); */

//    **************************************************************************************************************

/* Практическое задание 6.3

В программе объявлена переменная num, в которую записано числовое значение. Напишите функцию square(), которая возвращает квадрат этого числового значения. Обратите внимание, что функция обращается к глобальной переменной, а не получает значение в качестве аргумента.


Пример значений переменных:
num = 9

Пример результата:
81

function square() {
  let result = num * num
  return result
}

 */
// *******************************************************************************************************************

/* Практическое задание 6.4

В программе объявлена переменная num, в которой записано числовое значение. Используя цикл, возведите значение переменной в квадрат три раза. Каждый результат конкатенируйте через пробел и выведите в консоль.

Пример значений переменных:
num = 2

Пример результата:
"4 16 256"

function gerSquares(n,cnt=3){
    let result = n;
    let str = "";
    while(cnt){
      result = result ** 2;
      if(cnt !==1){
        str += result + " ";
      } else{
        str += result;
      }
     
      cnt--;
    }
    return str
  }
  
  console.log(gerSquares(num)); */

//   **************************************************************************************************************************

/* Практическое задание 6.5

В программе объявлена переменная data, в которой записано строковое значение. Напишите функцию getNumber(data), которая преобразовывает строку в число по следующему правилу:

если переменная data содержит не число, функция должна вернуть численное значение 0;
если переменная data содержит число, например "123", то функция возвращает числовое значение 123.
Вызовите эту функцию и выведите результат в консоль.

Пример значений переменных:
data = "привет"

Пример результата:
0

function getNumber(data) {
  data = parseFloat(data);
  if (Number.isNaN(data) === true){
 console.log(0);
 
 }else {
 console.log(data);
 }
 }
 getNumber(data); */

//  ************************************************************************************************************************************

/* Практическое задание 6.6

В программе объявлены две переменные — value и total, в которых записаны числовые значения. Напишите функцию getPercent(value, total), которая возвращает процент числа value от значения total. Вызовите эту функцию с value и total в качестве аргументов. Результат работы функции выведите в консоль.


Пример значений переменных:
value = 4

total = 80

Пример результата:
5

function getPercent(value,total){
  return (value / total) *100;
  }
  let result=getPercent(value,total);
  console.log(result); */

// *************************************************************************************************************************

//                                                            МАССИВЫ: ОСНОВЫ

/* Практическое задание 9.1

В программе объявлена переменная list, представляющая массив значений. Используя методы массивов, выполните следующие действия:

добавьте в начало массива новый элемент со значением Яблоко;
удалите последний элемент массива;
добавьте в конец массива новый элемент со значением Клубника.
После выполнения всех перечисленных действий выведите значение переменной list в консоль.


Пример значений переменных:
list = ["Груша", "Яблоко"]

Пример результата:
["Яблоко", "Груша", "Клубника"]

list.unshift("Яблоко");
list.pop();
list.push("Клубника");

console.log(list.parseInt); */

// ******************************************************************************************************************************

/* Практическое задание 9.2

В программе объявлена переменная list, в которую записан массив из строковых значений. Посчитайте и выведите в консоль элемент с максимальной длиной. Если элементов с такой длиной несколько, выведите первый.


Пример значений переменных:
list = ["Груша", "Яблоко"]

Пример результата:
"Яблоко" 
let longestWord = '';
for (let index = 0; index< list.length; index++) {
  if (list[index].length > longestWord.length) {
    longestWord = list[index];
  }
console.log(longestWord);
} */

// ***********************************************************************************************************************************

/* Практическое задание 9.3

В программе объявлена переменная list, которая содержит массив чисел. Используя цикл, посчитайте сумму чисел и выведите в консоль.


Пример значений переменных:
list = [23, 13, 3]

Пример результата:
39

var res = 0; 
for (var i = 0; i < list.length; i++) {
  res = list[0] + list[1] + list[2];
}
console.log(res) */

// ********************************************************************************************

//Практическое задание 9.4

// В программе объявлены две переменные — list_1 и list_2, в каждой из которых хранится массив из чисел. Объедините два массива в один и каждое значение возведите в квадрат. Результат выведите в консоль.

// Значения переменных:
// list_1 = [12, 3]

// list_2 = [2, 1]

// Результат:
// [144, 9, 4, 1]

// let sumArray = list_1.concat(list_2);

// for(let i in sumArray){
//   sumArray[i] = sumArray[i] ** 2;
// }

//   console.log(sumArray);

// **********************************************************************************************************

/* Практическое задание 9.5

В программе объявлена переменная list, в которую записан массив из положительных и отрицательных числовых значений. Используя цикл, посчитайте сумму положительных чисел и выведите результат в консоль.


Пример значений переменных:
list = [12, -4, 5, 32, 2],

Пример результата:
51

let sum = 0;
for(let i = 0; i < list.length; i++){
  if (list[i] > 0)
  {sum += list[i]}
}

console.log(sum); */

// **********************************************************************************************************************

/* Практическое задание 9.6
В программе объявлена переменная list, в которую записан массив числовых значений от 1 до 100. Используя цикл, сформируйте сумму из простых чисел этого диапазона и выведите результат в консоль.


Пример значений переменных:
list = [1, 2, 3, ... 99, 100]

Пример результата:
1060
let sum = 0
primeNum:
    for (let i of list) {
        if (i == 0 || i == 1) {
            sum += 0
        } else {
            for (let j = 2; j < i; j++) {
                if (i % j == 0) continue primeNum;
            }
            sum += i
        }
    }
console.log(sum); */

// *************************************************************************************************************************
/* Практическое задание 9.7

В программе объявлена переменная list, в которую записан массив из числовых значений. Рассчитайте произведение максимального и минимального элементов массива. Результат выведите в консоль.


Пример значений переменных:
list = [2, 45, 3, 23, 6]

Пример результата:
90

var max = 0;
var min = list[0];

    for (var i = 0; i < list.length; i++) { 
        
        if (list[i] > max) {
            max = list[i];

        }
        if(list[i] < min) {
            min = list[i];
        }
    }
    
console.log(max * min); */

// **************************************************************************************************************************

/* Практическое задание 9.8

В программе объявлена переменная list, в которую записан массив из числовых значений. Напишите программу, которая переворачивает массив list и выводит результат в консоль. Метод массива reverse() использовать нельзя.


Пример значений переменных:
list = [2, 45, 3, 23, 6]

Пример результата:
[6, 23, 3, 45, 2]

var newString =  [];
for (var i = list.length - 1; i >=0; i--) {
    newString.push(list[i]);
}
 console.log(newString);
 */

// *******************************************************************************************************************************

/* Практическое задание 9.9

В программе объявлена переменная sentence со строковым значением. Преобразуйте эту строку в массив так, чтобы каждое слово было отдельным элементом массива. Результат выведите в консоль.

Метод строки split() использовать нельзя.


Пример значений переменных:
sentence = "Завтра будет лучше чем вчера"

Пример результата:
['Завтра', 'будет', 'лучше', 'чем', 'вчера']

let position = 0;
const myArray = [''];
for (let i = 0; i < sentence.length; i++){
    if(sentence.charAt(i) == ' '){
        position++;
        myArray.push('');
    }
    else {
        myArray[position] += sentence.charAt(i);
    }
}
console.log(myArray); */

// ************************************************************************************************************************************

// Практическое задание 9.10
/* В программе объявлена переменная list, в которую записан массив из числовых значений. Напишите функцию count(list), которая принимает массив в качестве аргумента и возвращает количество четных элементов в массиве. Вызовите функцию count(list) и в качестве аргумента передайте ей список list. Выведите в консоль то, что вернет функция.


Пример значений переменных:
list = [2, 45, 3, 23, 6]

Пример результата:
2

function count(list) {
  let s = 0;
  for (let i = 0; i < list.length;i++){
      if (list[i] % 2 ==0){
          s++;
      }
  }
  return s;
  }
  console.log(count(list)); */

// **********************************************************************************************************************************

/* Практическое задание 9.11
В программе объявлена переменная list, в которую записан массив из числовых значений. Гарантируется, что массив не пустой. Реализуйте функцию average(list), которая принимает в качестве аргумента массив, рассчитывает среднее значение элементов массива, округляет получившееся значение по правилам математики и получившееся значение возвращает. Вызовите функцию average(list) и в качестве аргумента передайте список list. То, что функция вернет, необходимо вывести в консоль.


Пример значений переменных:
list = [2, 45, 3, 23, 6]

Пример результата:
16

let list = [2, 45, 3, 23, 6];
function average(list){
  
  let s = 0;
  
  for(let i = 0; i < list.length; i++ ){
    s += list[i];
   
  }
   return Math.round(s / list.length) 
}

console.log(average(list)); */

// ****************************************************************************************************

/* Практическое задание 9.12

В программе объявлена переменная list, в которой записан массив из чисел и логических значений. Используя цикл, посчитайте сумму числовых значений до первого логического значения. Дойдя до логического значения, остановите цикл. Результат выведите в консоль.


Пример значений переменных:
list = [2, 54, 2, 54, false, 2]

Пример результата:
112

let sum = 0;

        for(let i = 0; i < list.length; i++){
            if(typeof(list[i]) == "number"){
                sum += list[i];
            } else {
                break;
            }
        }

        console.log(sum);
/*
Решение 2:

for(let i = 0; i < list.length; i++){
          if(typeof(list[i]) == "boolean"){
            break;
          } else {
            sum += list[i];
          }
        }
        console.log(sum); */

// ******************************************************************************************************

/* Практическое задание 9.13

Используя цикл, сформируйте массив list со значениями от 10 до 20. Выведите значение переменной list в консоль.

let start =10;
let result  = [];
while (start <= 20) {
    result.push(start++);
}
console.log(result);
 */

// ************************************************************************************************************

/* Практическое задание 9.14

В программе объявлена переменная list, в которую записан массив. Используя цикл, сформируйте массив numbers_list, который содержит в себе только числа из массива list. Если в процессе прохода циклом по массиву list обнаружится значение false, последующие значения рассматривать не нужно. В конце программы выведите значение переменной numbers_list в консоль.


Пример значений переменных:
list = [2, "привет", 23, true, 2, false, 2]

Пример результата:
[2, 23, 2]

let numbers_list = [];

        for(let i = 0; i < list.length; i++){
            if(typeof(list[i]) == "number"){
                numbers_list.push(list[i]);
            } else if (list[i] == false){
                break;
            }
        }
console.log(numbers_list); */

// **********************************************************************************************************

/* Практическое задание 9.15

В программе объявлена переменная list, в которой записан массив из строковых значений. Напишите программу, которая считает количество элементов в массиве list без учета элементов со значением "default" и выводит результат в консоль. Сравнение должно быть регистронезависимым.


Пример значений переменных:
list = ["Лёша", "default", "полке", "клопа", "нашёл"]

Пример результата:
4

let newList = [];
        let num = 0;

        for(let i = 0; i < list.length; i++){
            list[i] = list[i].toLowerCase(); 
            if(list[i] == "default"){
                continue;
            } else {
                newList.push(list[i]);
            }
            num = newList.length;
        }
        console.log(num); */

// *************************************************************************************************************

/* Практическое задание 9.16

В программе объявлена переменная list, в которую записан массив из строковых значений. Сформируйте строку из первых букв каждого элемента массива и выведите ее в консоль. Гарантируется, что каждый элемент массива не нулевой длины.


Пример значений переменных:
list = ["почтовый","желание","абсолютный","закрытый"]

Пример результата:
"пжаз"

решение 1
l = list.length,
z = 0,
n = "";

for (; z < l; ++z)
{
n += list[z].charAt(0);
}
console.log(n);

решение

n = "";
for (z= 0; z < list.length; ++z)
{
n += list[z].charAt(0);
}
console.log(n); */

// **************************************************************************************************************

/* Практическое задание 9.17

В программе объявлена переменная obj, содержащая объект с подобным набором значений:

{
        "Яблоко": "фрукт",
        "Арбуз": "ягода",
        "Помидор": "овощ",
        "Огурец": "овощ",
        "Вишня": "ягода"
}
Напишите скрипт, который формирует новый объект со значениями и их количеством. Выведите новый объект в консоль.

Пример результата:
{
    "фрукт": 1,
    "ягода": 2,
    "овощ": 2
}


let newObj = {};
  for(let key in obj){
  newObj[obj[key]] = (newObj[obj[key]] || 0) + 1;
}
console.log(newObj); */

// *****************************************************************************************************************

/* Практическое задание 9.18

В программе объявлена переменная list, в которую записан массив из объектов. В каждом объекте записаны название продукта и его стоимость.

Выведите в консоль название продукта, цена которого является максимальной в заданном массиве. Если таких несколько, выведите название первого из них.


Пример значений переменных:
 list = [
 {product: "Apple", price: 25},
 {product: "Cherry", price: 32},
 {product: "Strawberry", price: 45}
]
Пример результата:
"Strawberry"

et maxPrice = 0;
    let goodName = 0;

    for (let key in list){
        if (list[key].price > maxPrice){
        maxPrice = list[key].price;
        goodName = key;
        }
    }
    console.log(list[goodName].product); */

// *********************************************************************************************************************

//                                                                      JS 2

//                                                              Базовые строковые функции

/* Практическое задание 1.1.

В программе задана переменная message со строковым значением. Определите наличие подстроки привет в начале строки переменной message. Если данное условие выполняется, выведите в консоль булевое значение true, в ином случае — false. Сравнение должно быть без учета регистра. Правильный ответ выведите в консоль.


let lowerMess = message.toLowerCase();
if(lowerMess.startsWith("привет") === true) {
console.log(true);
} else{
  console.log(false)
} */

// *************************************************************************************************************************

/*  Практическое задание 1.2.

 В программе задана переменная greetings со строковым значением. Определите позицию последнего вхождения подстроки username в значении переменной greetings. Результат выведите в консоль.


Пример значений переменных:

greetings = "Приветствую, username! Сегодня вы получили два сообщения от username."
Пример результата:

60

let sumGreetings = greetings.toLowerCase();
let twoSumGreetings = sumGreetings.lastIndexOf("username");
console.log(twoSumGreetings); */

// **************************************************************************************************************************

/* Практическое задание 1.3.

В программе задана переменная firstDiv со строковым значением. Определите, встречаются ли в данной строке два парных тега <p>. Выведите в консоль булевое значение true, если встречается, и false — в ином случае.


Пример значений переменных:

firstDiv = "<div><p>Первый заголовок</p><p>Второй заголовок</p></div>"
Пример результата:

true

let firstDiv = "<div><p>Первый заголовок</p><p>Второй заголовок</p></div>";
let start1 = firstDiv.indexOf("<p>");
let start2 = firstDiv.lastIndexOf("<p>");
let end1 = firstDiv.indexOf("</p>");
let end2 = firstDiv.lastIndexOf("</p>");
let startFlag = start1 >= 0 && start1 !== start2 && start2 >= 0;
let endFlag = end1 >= 0 && end1 !== end2 && end2 >= 0;
console.log(startFlag && endFlag); */

// *****************************************************************************************************************************

/* Практическое задание 1.4.

В программе объявлена переменная road со строковым значением, которая задает протяженность дороги. Необходимо из строки убрать подстроку km, оставив только численное значение. Его необходимо конвертировать в мили, округлить до одного знака после запятой, а результат вывести в консоль. Помните, что 1 километр равен 0,62 мили.


Пример значений переменных:

road = 15 km
Пример результата:

9.3


let length = +road.split(" ")[0];
console.log(length)
console.log(+(length * 0.62).toFixed(1));
 */

// ********************************************************************************************************************************

/* Практическое задание 1.5.

В программе задана переменная words со строковым значением. Напишите условный оператор, который выводит в консоль сообщение В строке больше одного слова, если строка содержит больше одного слова, в ином случае в консоль должна выводиться фраза В строке одно слово.


Пример значений переменных:

words = "Солнечная панель"
Пример результата:

"В строке больше одного слова"

let length = words.split(" ").length;
console.log(length > 1 ? "В строке больше одного слова" : "В строке одно слово" ); */

// **********************************************************************************************************************************

//                                                             Сравнение строк.

/* Практическое задание 1.6.

В программе объявлена переменная symbols со строковым значением. В данной строке могут встречаться буквенные символы и цифры. Опишите условие, которое выводит в консоль строку Первый символ цифра, если первый символ переменной symbols является цифрой. В противном случае необходимо вывести строку Первый символ не цифра.


Пример значений переменных:

symbols = "Первый номер"
Пример результата:

"Первый символ не цифра"


if(isNaN(symbols[0]) == false){
  console.log("Первый символ цифра")
}
else{
  console.log("Первый символ не цифра")
}
 */

// **********************************************************************************************************************************
/* 
Практическое задание 1.7.

В программе объявлена переменная symbols со строковым значением. Напишите условный оператор, который реализует следующую логику:

Если сумма числовых значений Unicode первых двух символов делится на два без остатка, необходимо получившееся число конвертировать в unicode-символ и вывести в консоль
В ином случае необходимо вывести сообщение Символ обнаружить не удалось

Пример значений переменных:

symbols = "floor"
Пример результата:

"Ò"

let oneUnicod =  symbols.codePointAt(0);
let twoUnicod =  symbols.codePointAt(1);
let summ = oneUnicod + twoUnicod;
if(summ % 2 == 0){
  console.log(String.fromCharCode(summ))
} else{
  console.log("Символ обнаружить не удалось")
} */

// ***********************************************************************************************************************************

//                                                           Работа с регулярными выражениями

// Практическое задание 1.8.

// В программе задана переменная phone со строковым значением. В ней хранится номер телефона и, помимо цифр, иные символы. Преобразуйте строку так, чтобы в номере отсутствовали следующие символы: (,/:/,*/ ). (запетая тут не нужна. она поставлен чтобы не комментировалась задача.)

// Пример значений переменных:

// phone = "+712:34567*8,90"
// Пример результата:

// "+71234567890"

// const regEx = /[^\d\+]/g;
// console.log(phone.replace(regEx, ''));

// ************************************************************************************************************************************

/* Практическое задание 1.9.

В программе задана переменная emails со строковым значением. В ней указано несколько значений электронной почты через пробел. Преобразуйте данное значение в массив так, чтобы каждая почта в строке являлась элементом массива. Результат выведите в консоль.


Пример значений переменных:

emails = "example@ex.ru primer@primer.com email@com.ru"
Пример результата:

["example@ex.ru", "primer@primer.com", "email@com.ru"]

console.log(emails.split(" "));

 */
// **************************************************************************************************************************************

/* Практическое задание 1.10.

В программе задана переменная ticket со строковым значением. Напишите условный оператор, который работает по следующей логике:

Если в билете после буквенных символов и тире идут 8 цифр подряд, программа должна вывести в консоль сообщение Выбран билет на концерт
Если в билете после буквенных символов идут 12 цифр подряд, программа должна вывести в консоль сообщение Выбран билет в театр
В противном случае выведите в консоль сообщение Билет не определен

Пример значений переменных:

ticket = "BM-12234567:RU"
Пример результата:

"Выбран билет на концерт"

let test1 = /[a-z-]\d{8}\D/i;
let test2 = /[a-z-]\d{12}\D/i;

if(test1.test(ticket)){
  console.log("Выбран билет на концерт");
}
else if (test2.test(ticket)){
  console.log("Выбран билет на театр");
}
else{
  console.log("Билет не определен");
}; */
// **************************************************************************************************************************************

//                                                                 Метод splice

/* Практическое задание 2.1.

В программе задана переменная values, которая хранит массив со строковыми и булевыми значениями. Замените булевое значение с минимальным индексом на строковое значение Булевый тип. Преобразованный массив выведите в консоль. Примечание: подразумевается решение без методов массивов, просто вспомним, как работать с массивами и циклами!


Пример значений переменных:

values = ["Строка", true, "Число", "Объект", "Не число", false]
Пример результата:

["Строка", "Булевый тип", "Число", "Объект", "Не число", false]

let values = ["Строка", true, "Число", "Объект", "Не число", false];

for ( let i of values){
  if( typeof i == "boolean"){
    values[values.indexOf(i)] = "Булевый тип";
    break
  }
}
console.log(values) */

// ***************************************************************************************************************************************

//                                                            Методы concat и filter

/*  Практическое задание 2.2.

В программе задана переменная partNumbers, которая хранит в себе массив. Каждый элемент массива является артикулом товара. Напишите программу, которая создаст новый массив на основе partNumbers. В новом массиве должны быть все элементы из partNumbers, которые заканчиваются на две цифры и два буквенных символа. Все остальные элементы необходимо отбросить. Значение нового массива выведите в консоль.


Пример значений переменных:

partNumbers = ["ER1234COM", "FIV987451RU","GE123JO","P4321NO"]
Пример результата:

["FIV987451RU", "GE123JO", "P4321NO"]

let rv = partNumbers.filter(i=>/\d{2}\D{2}$/.exec(i));
console.log(rv);
 */

// ****************************************************************************************************************************************

//                                                                  Метод map

/* Практическое задание 2.3.

В программе задана переменная layout, которая хранит в себе строковое значение. Данная строка содержит в себе часть HTML-верстки с числами. На основе значения layout сформируйте массив из чисел, которые встречаются в верстке. Если число четное, возведите его в квадрат, в ином случае оставьте без изменений. Полученный массив выведите в консоль. Если строка layout не содержит чисел, выведите пустой массив.


Пример значений переменных:

layout = "<p>10</p><p>14</p><p>23</p><p>43</p><p>98</p><p>101</p>"
Пример результата:

[100, 196, 23, 43, 9604, 101]


let numbers = layout.match(/\d+/g) || [];
numbers = numbers.map(el => {
  if(el % 2 === 0){
    return el ** 2
  } else{
    return +el
  }
})
console.log(numbers);
 */

// *****************************************************************************************************************************************

/* Практическое задание 2.4.

В программе задана переменная tasks, которая содержит массив. Элементы данного массива являются объектами с ключами title и completed. Сформируйте новый массив titles, который в качестве значений может хранить свойства title из всех значений массива tasks. Результат выведите в консоль.


Пример значений переменных:

tasks = [
    {title: "Умыться" , completed: true},
    {title: "Сделать зарядку" , completed: true},
    {title: "Приготовить завтрак" , completed: false}
]
Пример результата:

["Умыться", "Сделать зарядку", "Приготовить завтрак"]

let titles = tasks.map(el=> {
  // console.log(el)
  return el.title
 } );

console.log(titles)

 */

// *****************************************************************************************************************************************
//                                                               Методы для проверки массива

/* Практическое задание 2.5

В программе задана переменная values, которая хранит массив со строковыми и булевыми значениями. На основе массива values сформируйте новый массив result, который является фрагментом values. Новый массив должен начинаться с первого вхождения булевого значения и заканчиваться последним вхождением булевого значения в массив values. Выведите получившийся массив в консоль.


Пример значений переменных:

values = ["Строка",true,"Числа","Объект","Не число", false, "Не объект"]
Пример результата:

[true, "Число", "Объект", "Не число", false]


let start = values.findIndex(el => typeof el === "boolean");
let end = values.findLastIndex(el => typeof el === "boolean");
let newArr = values.slice(start,end+1);
console.log(newArr);
 */

// второй вариант решения

/* function setStart(arr){
  if(typeof arr[0] === "boolean"){
    return arr;
  } else {
    arr.shift(); // удалить первый элемент
    return setStart(arr); // повтрить действие
  }
}
function setEnd(arr){
  if(typeof arr[arr.length - 1] === "boolean"){
    return arr;
  } else {
    arr.pop(); // удалить последний элемент
    return setEnd(arr) // повтрить действие
  }
}

values = setStart(values);
values = setEnd(values);
console.log(values);
 */

// *******************************************************************************************************************************************

/* Практическое задание 2.6.

В программе задана переменная values, которая хранит в себе массив. Элементы массива являются числами. Определите, находятся ли в заданном массиве элементы, которые содержат четырехзначные числа. Результат выведите в консоль в виде булевого значения (true, если содержит, и false, если нет).


Пример значений переменных:

values = [10, 185, 11200, 980]
Пример результата:

false

const checkLength = (values) => {
  let flag = false; // задал переменную для того, чтобы быда проверка далее.
  values.forEach(e => {
      if (e.toString().search(/^\d{4,4}$/) === 0) flag = true; // перевел массив в строку методом toString(), нашел совпадения методом search()
  });
  return flag;
}

console.log(checkLength(values)); */

// *******************************************************************************************************************************************
/* Практическое задание 2.7.

Необходимо доработать программу из задания 2.7

В программе задана переменная values, которая хранит в себе массив. Элементы массива являются числами. Определите, находятся ли в заданном массиве элементы, которые содержат четырехзначные числа. Если такие значения встречаются, выведите индекс первого в консоль. В противном случае выведите сообщение Искомый элемент не был найден.

Пример значений переменных:

values = [10, 185, 11200, 980]
Пример результата:

"Искомый элемент не был найден"

let index = values.findIndex(el => (el + "").length === 4); //  (el + "") - el складываю со строкой, чтобы получить строку.
console.log(index !== -1 ? index : "Искомый элемент не был найден"); */

// ********************************************************************************************************************************************

/* Практическое задание 2.8.

В программе задана переменная users, которая хранит в себе массив. Элементы данного массива являются объектами. Определите индекс элемента, значение свойства role которого содержит больше одного слова. Результат выведите в консоль разработчика.


Пример значений переменных:

users = [
    {login: "user1", role: "Admin"},
    {login: "user2", role: "State user"},
    {login: "user3", role: "Moderator"}
]

Пример результата:

1

const elem = users.find(m => m.role.indexOf(' ') != -1);
console.log(users.indexOf(elem)) */

// ********************************************************************************************************************************************

//                                                                   Методы для преобразования массива

/* Практическое задание 2.9.

В программе задана переменная array, которая хранит в себе двумерный массив. Его элементы — массивы, состоящие из чисел. Отсортируйте массив по количеству элементов вложенного массива по возрастанию. Результат выведите в консоль.


Пример значений переменных:

array = [[1,2,3],[1,2],[1,2,3,4]]
Пример результата:

[[1,2],[1,2,3],[1,2,3,4]]


console.log(array.sort());
 */

// *******************************************************************************************************************************************

/* Практическое задание 2.10.

В программе задана переменная randValues, которая хранит в себе массив. Его элементы могут являться как строковыми, так и числовыми значениями. Отсортируйте массив следующим образом:

В начале массива должны быть все числовые значения по возрастанию
В конце все строковые, упорядоченные по алфавиту
Результат выведите в консоль.

Пример значений переменных:

randValues = ["Банан", 3, "Апельсин", 2, "Вишня"]
Пример результата:

[2, 3, "Апельсин", "Банан", "Вишня"]

console.log(randValues.sort(function(a,b){return a-b})); */

// *********************************************************************************************************************

//                                                 Методы reverse, split и join

// Практическое задание 2.11

// В программе задана переменная words, которая хранит в себе массив строковых значений. Напишите скрипт, который считает количество палиндромов и непалиндромов в массиве words. Результат должен представлять собой массив из двух элементов, где первое значение — количество палиндромов, а второе — непалиндромов.


// Пример значений переменных:

// words = ["Заказ", "Такси", "Доход"]
// Пример результата:

// [2, 1]

// let words = ["Заказ", "Такси", "Доход"];
// words = words.join(",").toLowerCase();
// let a = 0;
// let b = 0;
// let newWords = "";
// let arr = [];
// for(i = words.length - 1; i >= 0 ; i--){
//   newWords += words[i]
// };
// words = words.split(",")
// newWords = newWords.split(",").reverse();
// for (i = 0; i < words.length; i++){
//   if (words[i] == []){
//      a = 0;
//      b = 0;
//   }
//    else if(newWords[i] === words[i]){
//    a++
//   } else if(newWords[i] !== words[i]) {
//    b++
//   } 
// }
//  arr.unshift(a);
//  arr.push(b)
// console.log(arr)


// *********************************************************************************************************************

// Практическое задание 2.12.

// В программе задана переменная dates, которая хранит в себе строковое значение. В данной строке хранятся значения дат в формате ДД:ММ:ГГГГ, которые разделены пробелами. На основе значения переменной dates сформируйте новый массив, каждый элемент которого содержит одну дату переменной dates, преобразованную в формат ДД/ММ/ГГГГ. Выведите содержимое сформированного массива в консоль.


// Пример значений переменных:

// dates = "23.04.1996 07.10.2002 15.08.1945"
// Пример результата:

// ["23/04/1996", "07/10/2002", "15/08/1945"]


// let dates = "23.04.1996 07.10.2002 15.08.1945";


// let re = dates.replace(/\./g,"/");
// let reg = re.split(/[' ']/);
// console.log(reg);



// ************************************************************************************************************************

// Практическое задание 2.13.

// В программе задана переменная tickets, которая хранит в себе строковое значение. В этой переменной указаны номера билетов на поезд (после слова Train) и на самолет (после слова Airplane). Необходимо написать скрипт, который на основе строки из переменной tickets формирует объект. Он должен хранить в себе два ключа (train, airplane), а в качестве значений — массивы с номерами билетов для поезда и самолета соответственно.


// Пример значений переменных:

// tickets = "Train: AV432, FS452, OE402. Airplane: DR578, JN1089, NDK140."
// Пример результата:

// {
//     "train" : ["AV432", "FS452", "OE402"],
//     "airplane" : ["DR578", "JN1089", "NDK140"]
// }



// let mas = tickets.replace(/\s+/g,'').replace(/.$/, '').split('.');
// let obj = {};
// for (let i = 0; i < mas.length; i++) {
//     let mas2 = mas[i].split(':');
//     console.log(mas2)
//     obj[mas2[0]] = mas2[1].split(',');
// } 
// for (let key in obj) {
//     obj[key.toLowerCase()] = obj[key];
//     delete obj[key];
// }
// console.log(obj);


// ***************************************************************************************************************************

// Практическое задание 2.14.

// В программе задана переменная numbers, которая хранит массив из чисел. Определите, какое максимальное количество элементов массива numbers (в порядке, который реализован в массиве) можно сложить, чтобы их итоговая сумма не превышала 50. Результат выведите в консоль.


// Пример значений переменных:

// numbers = [10, 20, 33, 55, 100]
// Пример результата:

// 2


// let numbers = [10, 20, 33, 55, 100];
// const maxSum = 50;
// let currentSum = 0;
// let count = 0;

// for (let i = 0; i < numbers.length; i++) {
//     if (currentSum + numbers[i] > maxSum) {
//         break;
//     }
//     currentSum += numbers[i];
//     count++;
// }
// console.log(count);


// *******************************************************************************************************************************

// Практическое задание 2.15.

// В программе задана переменная values, которая хранит массив из строк. Определите математическую сумму всех элементов, которые при преобразовании в число не вернут значение NaN. Результат выведите в консоль.


// Пример значений переменных:

// values = ["100", "30", "Не число", "20", "Тоже не число"]
// Пример результата:

// 150

// const sum = values.reduce((acc, curr) => {
//   const num = Number(curr);
//   if (!isNaN(num)) {
//   acc += num;
//   }
//   return acc;
//   }, 0);
  
//   console.log(sum)


// *********************************************************************************************************************************

// Практическое задание 2.16.

// В программе заданы два массива array_1 и array_2, элементы которого являются числами. Значения внутри одного массива уникальные. Реализуйте функцию intersection, которая принимает в качестве аргументов два массива и возвращает новый массив. Он должен содержать значения, которые встречаются в обоих массивах-аргументах, и быть отсортирован по убыванию.


// Пример значений переменных:

// array_1 = [2, 4, 7, 8, 1]

// array_2 = [2, 5, 11, 6, 1]

// Пример результата:

// [2, 1]


// function intersection(array_1, array_2) {
//   return array_1.reduce((acc, val) => {
//       if (array_2.includes(val)) {
//           acc.push(val);
//       }
//       return acc;
//   }, []).sort((a, b) => b - a);
// }

// console.log(intersection([2, 4, 7, 8, 1], [2, 5, 11, 6, 1]));

// ************************************************************************************************************************************



//                                                          Object и его методы

// Практическое задание 3.1.

// В программе объявлена переменная car, которая хранит в себе объект, у которого есть как минимум одно свойство — engine. Удалите из объекта car свойство engine и результат выведите в консоль.


// Пример значений переменных:

// car  = {
//     model: "Audi", 
//     color: "white",
//     weight: 1850,
//     engine: "170 hp"
// }
// Пример результата:

// {
//     model: "Audi", 
//     color: "white",
//     weight: 1850
// }


// delete car.engine;

// console.log(car)

// ****************************************************************************************************************************************


// Практическое задание 3.2.

// В программе объявлена переменная goods, которая хранит объект со свойствами, описывающими товар. Сформируйте массив, который содержит в начале все названия свойств объекта, а потом все их значения. Результат выведите в консоль.


// Пример значений переменных:

// goods = {
//     title: "Самокат", 
//     price: 6000,
//     good_id: 1
// }
// Пример результата:

// ["title, "price", "good_id", "Самокат", 6000, 1]


// let clone = Object.keys(goods);
// let clone2 = Object.values(goods)
// let result = clone.concat(clone2);
// console.log(result);


// *****************************************************************************************************************************************

// Практическое задание 3.3.

// В программе заданы две переменные article и author, которые содержат объекты. Объект article содержит информацию о статье, а author — об авторе. Сформируйте новый объект, который содержит свойства объектов article и author. Результат выведите в консоль.


// Пример значений переменных:

// article = {
//     title: "Загадки дачного огурца", 
//     text: "Огурец не перестает удивлять своими выходками. Хозяйка в недоумении" 
// }
// author = {
//     name: "Ричард М.В.",
//     age: 43
// }

// Пример результата:

// article = {
//     title: "Загадки дачного огурца", 
//     text: "Огурец не перестает удивлять своими выходками. Хозяйка в недоумении",
//     name: "Ричард М.В.",
//     age: 43
// }


// let sum = Object.assign({},article,author);
// console.log(sum)

// ****************************************************************************************************************************************

//                                              Именованные массивы

// Практическое задание 3.4.

// В программе задан массив array. Напишите функцию count(), которая считает количество элементов массива array и выводит в консоль сообщение, как в примере.


// Пример значений переменных:

// array = [true, 4, "word", "10n"]
// Пример результата:

// Количество элементов в массиве: 4

// function count(){
//   let a = array.length
//   console.log(`Количество элементов в массиве: ${a}`)
// }


// *************************************************************************************************************************************

// Практическое задание 3.5.

// В программе задан двумерный массив employee. Удалите у данного массива значение, у которого первый элемент hireDate, и добавьте новое значение ["jobName", "IT PROG"] в конец массива. Результат выведите в консоль.


// Пример значений переменных:

// employee  = [
//     ["firstName", "Ivan"], 
//     ["lastName", "Ivanov"],
//     ["hireDate", "21.10.2015"]
// ]
// Пример результата:

// [
//     ["firstName", "Ivan"], 
//     ["lastName", "Ivanov"],
//     ["jobName", "IT PROG"]
// ]

// let employeeOne = new Map(employee)
// employeeOne.delete("hireDate");
// employeeOne.set("jobName", "IT PROG")
// let employeeTwo = [];
// for (let item of employeeOne) {
//     employeeTwo.push(item);
// }
// console.log(employeeTwo);

// ***************************************************************************************************************************************

Практическое задание 3.6.

В программе задан двумерный массив array. Создайте и вызовите функцию countString(), которая считает количество значений массива array, у которых второй элемент является строкой. Функция countString() должна выводить в консоль сообщение, как в примере.


Пример значений переменных:

array = [
        [ "boolean", true ], 
        [ "number", 4 ],
        [ "string", "word" ],
        [ "object", {}]
    ]
Пример результата:

Количество строковых элементов в именованном массиве: 1

// *****************************************************************************************************************************************



//                                                                 Контекст

// Практическое задание 4.1.

// В программе объявлены объекты pet_1 и pet_2. Напишите функцию getName() и присвойте ее объектам pet_1 и pet_2 в качестве метода. При вызове метода getName() он должен вернуть имя и возраст питомца через пробел. Решить задачу необходимо с использованием this.


// Пример значений переменных:

// pet_1 = { 
//     name: "Шарик", 
//     age: 10 
// };

// pet_2 = { 
//     name: "Жучка", 
//     age: 5
// };


// pet_1.getName = function (){
  
//   return this.name + " " + this.age
    
//   }
  
//   pet_2.getName = function (){
    
//   return this.name + " " + this.age
    
//   }
  
//   pet_1.getName()
//   pet_2.getName()
  
//   console.log(pet_1.getName() + ";" + pet_2.getName());

// *****************************************************************************************************************************************


// Практическое задание 4.2.

// В программе объявлен объект input и функция sayHi(), которая выводит в консоль сообщение из примера. Используя метод присвоения контекста, свяжите контекст объекта input с функцией sayHi() и вызовите функцию sayHi().


// Пример значений переменных:

// input = {
//     id: 1,
//     value: "Добрый вечер",
//     firstName: "Григорий",
//     lastName: "Стрельников" 
// }

// function sayHi() {
//     console.log(`${this.value}, ${this.firstName} ${this.lastName}!`)
// }
// Пример результата:

// Добрый вечер, Григорий Стрельников!



// let foo = sayHi.bind(input);

// foo()

// ******************************************************************************************************************************************

// Практическое задание 4.3.

// В программе объявлен объект pet со свойствами name и breed и функция getDescription(), которая выводит эту информацию, используя this. Привяжите к функции getDescription() контекст pet и присвойте получившуюся функцию переменной getDescription.


// Пример значений переменных:

// pet = { 
//     name: "Диксон", 
//     breed: "Немецкая овчарка" 
// }

// function getDescription() { 
//     console.log("Имя питомца: " + this.name + ", Порода: " + this.breed) 
// }
// Пример результата:

// Имя питомца: Диксон, Порода: Немецкая овчарка



// getDescription = getDescription.bind(pet)
 
// getDescription()

// ******************************************************************************************************************************************

// Практическое задание 4.4.

// В программе объявлен объект props, у которого задан набор свойств. Объявите функцию getValue(), которая выводит в консоль строку со всеми свойствами и их значениями (без методов). Привяжите объект props в качестве контекста функции getValue() и присвойте получившуюся функцию переменной getValue.


// Пример значений переменных:

// props= { 
//     name: "Анатолий", 
//     age: 29,
//     sayHi: ()=>"привет"
// }
// Пример результата:

// Значения свойств объекта props (name: Анатолий, age: 29)


// let str = '';
// for (let key in props) {
//   if (typeof props[key] !== 'function') {
//     str += key +': ' + props[key] + ', ';
//   }
// }
// str = str.slice(0, -2);
// console.log('Значения свойств объекта props (' + str + ')');
// ******************************************************************************************************************************************


// Практическое задание 4.5.

// В программе объявлен объект hero, свойства которого описывают информацию о герое. В объекте в том числе определен метод getPosition, который возвращает позицию героя в игре. Определите, почему вызов getPosition работает некорректно. Исправьте эту ошибку.


// Пример значений переменных:

// hero = { 
//     nick: "FirstHero", 
//     position: "Лагерь",
//     getPosition: ()=>console.log("Позиция героя: " + this.position)
// }
// Пример результата:

// Позиция героя: Лагерь


// hero = { 
//   nick: "FirstHero", 
//   position: "Лагерь",
//   getPosition () {
//   console.log("Позиция героя: " + this.position)
// }
// }
// hero.getPosition()


// ******************************************************************************************************************************************

// Практическое задание 5.1.

// В программе объявлена переменная order, которая хранит объект. Объявите переменную descriptor, которая должна содержать значения всех атрибутов ключа totalPrice объекта orders в виде объекта. Результат выведите в консоль.


// Пример значений переменных:

// order = {
//     productName: "Велосипед",
//     costomerName: "Саша",
//     salesName: "Петя",
//     totalPrice: 15000
// }
// Пример результата:

// {value: 15000, writable: true, enumerable: true, configurable: true}



// let descriptor = Object.getOwnPropertyDescriptor(order,"totalPrice");

// console.log(descriptor)


// ******************************************************************************************************************************************


// Практическое задание 5.2.

// В программе задан объект employees, который содержит ряд свойств и методов. Сформируйте строку с именами всех свойств через запятую и пробел (, ) и выведите в консоль. Имена методов добавляться не должны.


// Пример значений переменных:

// employees = {
//     firstName: "Петя",
//     lastName: "Иванов",
//     ratePerDay: 2500,
//     workingDays: 5,
//     getSalary() { console.log(employees.ratePerDay * employees.workingDays )} 
// }
// Пример результата:

// firstName, lastName, ratePerDay, workingDays

// let newobj = [];
//  for (let [key, value] of Object.entries(employees)) {
//     if (typeof(value) !== 'function' ) {
//          newobj.push([key])
//      }
//  };
//  newobj = newobj.reduce((prev, current)=> prev.concat(current), [])
//  let result = newobj.join(', ')
//  console.log(result)


// ****************************************************************************************************************************************

Практическое задание 5.3.

В программе объявлены переменные firstName и lastName. Создайте объект user со свойствами firstName и lastName и добавьте getter и setter fullName. Сеттер fullName должен принимать имя и фамилию пользователя через пробел, разделять и присваивать свойствам firstName и lastName соответственно. Геттер fullName должен формировать строку, состоящую из имени и фамилии через пробел.


Пример значений переменных:

firstName = "Александр"
lastName = "Петров"
Пример результата:

user.fullName // "Александр Петров"
user.fullName = "Всеволод Старозубов"
user.firstName // "Всеволод"
user.lastName // "Старозубов"



// ****************************************************************************************************************************************

Практическое задание 5.4.

В программе объявлены переменные name и phone, которые хранят строки. В name указано название заведения, а в phone — его номер телефона. Создайте класс Delivery со свойствами name и phone. Помимо описанных свойств, добавьте свойство validPhone, которое проверяет значение свойства phone на вхождение знака + в начале строки. Если знак отсутствует, свойство validPhone должно принять булевое значение false, в противном случае — true. Создайте экземпляр класса Delivery и в качестве аргументов конструктора укажите значения переменных name и phone. Получившийся экземпляр класса запишите в переменную deliveryName.


Пример значений переменных:

name = "Pizza"
phone = "81234567890"
Пример результата:

false



// ****************************************************************************************************************************************


Практическое задание 5.5.

В программе создан класс Permissions, свойства которого описывают права пользователей на редактирование статей на сайте. Создайте новый класс User, который наследуется от класса Permissions. Дополнительно в классе User добавьте свойство name, значение которого класс принимает в качестве аргумента конструктора.



// ******************************************************************************************************************************************

Практическое задание 5.6.

В программе задан массив array, элементы которого имеют численное значение, и переменная num, которая является числом. Реализуйте функцию queue(num, ...array), которая принимает в качестве аргументов множество значений списка array и значение переменной num. Функция должна найти минимальную сумму num элементов из значений массива array. Ответ выведите в консоль.


Пример значений переменных:

array = [2, 4, 7, 8, 1]
num = 2

Пример результата:

3


// *****************************************************************************************************************************************


// Практическое задание 6.1.

// В программе задана переменная ctx, которая содержит контекст canvas элемента. Отрисуйте в canvas прямоугольник fillRect с размерами 100 на 65.

// ctx.fillRect(5, 5, 100, 65);


// *******************************************************************************************************************************************


// Практическое задание 6.2.

// В программе задана переменная ctx, которая содержит контекст canvas элемента. Отрисуйте в canvas два горизонтальных отрезка длиной 100.

// Координаты первого отрезка: точка 1: x = 100, y = 100; точка 2: x = 200, y = 100.

// Координаты второго отрезка: точка 1: x = 100, y = 150; точка 2: x = 200, y = 150.


// ctx.beginPath();
// ctx.moveTo(100, 100);
// ctx.lineTo(200, 100);
// ctx.stroke();
// ctx.beginPath();
// ctx.moveTo(100, 150);
// ctx.lineTo(200, 150);
// ctx.stroke()


// ********************************************************************************************************************************************

// Практическое задание 6.3.

// В программе задана переменная ctx, которая содержит контекст canvas элемента. Отрисуйте в canvas три отрезка разных цветов. Первый отрезок красного #e74c3c цвета, второй — зеленого #16a085 цвета, а третий — синего #2980b9 цвета.

// ctx.beginPath();
// ctx.moveTo(100, 100);
// ctx.strokeStyle = '#e74c3c';
// ctx.lineTo(200, 100);
// ctx.stroke();
// ctx.beginPath();
// ctx.moveTo(100, 150);
// ctx.strokeStyle = '#16a085';
// ctx.lineTo(200, 150);
// ctx.stroke();
// ctx.beginPath();
// ctx.moveTo(100, 125);
// ctx.strokeStyle = '#2980b9';
// ctx.lineTo(200, 125);
// ctx.stroke();


// ******************************************************************************************************************************************

// Практическое задание 6.4.

// В программе задана переменная ctx, которая содержит контекст canvas элемента. Отрисуйте в canvas четыре квадрата fillRect разных цветов с указанными на картинке размерами и отступами.

// Значение цветов:

// Левый верхний квадрат: #ff3d00
// Правый верхний квадрат: #0bdd38
// Левый нижний квадрат: #2e77da
// Правый нижний квадрат: #ffd200


// ctx.fillStyle = '#ff3d00';
// ctx.fillRect(10, 10, 100, 100);
// ctx.fillStyle = '#0bdd38';
// ctx.fillRect(120, 10, 100, 100);
// ctx.fillStyle = '#2e77da';
// ctx.fillRect(10, 120, 100, 100);
// ctx.fillStyle = '#ffd200';
// ctx.fillRect(120, 120, 100, 100);



// ******************************************************************************************************************************************

// Практическое задание 6.5.

// В программе задана переменная ctx, которая содержит контекст canvas элемента. Отрисуйте в canvas 50 окружностей c центром в точке 150:150 и радиусом от 2 до 100. Для решения данной задачи воспользуйтесь циклом.

// let radius = 2;
// for (let index = 0; index < 50; index++) {
//   ctx.beginPath();
//   ctx.arc(150, 150, 100, 0, 2 * Math.PI);
//   ctx.fill();
//   radius +=2;
// };


// ******************************************************************************************************************************************


// Практическое задание 6.6.

// В программе задана переменная ctx, которая содержит контекст canvas элемента. Напишите программу, которая отрисовывает круги при движении мышью по canvas (для получения координат мыши используйте offsetX и offsetY). Для решения задачи воспользуйтесь методом addEventListener у объекта document.

// Для правильной валидации задания выполните проверку в следующем порядке:

// Выполните задание
// Нажмите на кнопку «Проверить»
// Проведите курсором по окну с результатом
// Нажмите на кнопку «Проверить» еще раз



// document.addEventListener('mousemove', e =>{
// 	ctx.beginPath();
// 	ctx.arc(e.offsetX, e.offsetY, 50, 0, 2 *Math.PI);
// 	ctx.stroke();
// });



// ******************************************************************************************************************************************


//                                            Управление веб-страницей с помощью JavaScript





// Практическое задание 1.1.

// Напишите скрипт, который определяет тип тега с классом secret и выводит его в консоль.


// Пример заданного HTML-документа:

// <div class="secret">...</div>

// Пример результата:

// div


// console.log(document.querySelector(".secret").tagName.toLowerCase());


// ********************************************************************************************************************************************


// Практическое задание 1.2.

// Напишите скрипт, который определяет тип тега с идентификатором elem и выводит его в консоль.


// Пример заданного HTML-документа:

// <div id="elem">...</div>

// Пример результата:

// div

// console.log(document.querySelector("#elem").tagName.toLowerCase());

// *******************************************************************************************************************************************

// Практическое задание 1.3.

// В HTML-документе есть несколько тегов с классом promo. Напишите скрипт, который определяет количество элементов с данным классом и выводит результат в консоль.


// Пример заданного HTML-документа:

// <p class="promo">...</p>

// …

// <div class="promo">...</div>

// Пример результата:

// 2


// console.log(document.querySelectorAll(".promo").length);

// ******************************************************************************************************************************************



//                                                           Свойства DOM-элементов


Практическое задание 1.4.

Выведите в консоль название последнего тега, у которого есть класс target.


Пример заданного HTML-документа:

<div class="target">Первый элемент</div>

<p class="target">Второй второй</p>

<span class="target">Третий третий</span>

Пример результата:

span

// ********************************************************************************************************************************************

